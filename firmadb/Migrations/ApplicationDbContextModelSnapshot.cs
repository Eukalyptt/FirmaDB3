// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using firmadb.Data;

#nullable disable

namespace firmadb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("firmadb.Models.Ametinimetus", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionID"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionID");

                    b.ToTable("Ametinimetus");
                });

            modelBuilder.Entity("firmadb.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("AccessRights")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<int>("SickLeave")
                        .HasColumnType("int");

                    b.Property<int>("VacationDays")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("FirmaID");

                    b.HasIndex("PositionID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("firmadb.Models.Firma", b =>
                {
                    b.Property<int>("FirmaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FirmaID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirmaID");

                    b.ToTable("Firma");
                });

            modelBuilder.Entity("firmadb.Models.Haigusleht", b =>
                {
                    b.Property<int>("SickLeaveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SickLeaveID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SickLeaveID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Haigusleht");
                });

            modelBuilder.Entity("firmadb.Models.LaenutatavadAsjad", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.ToTable("LaenutatavadAsjad");
                });

            modelBuilder.Entity("firmadb.Models.Laenutus", b =>
                {
                    b.Property<int>("LoanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ItemID");

                    b.ToTable("Laenutus");
                });

            modelBuilder.Entity("firmadb.Models.Lapsed", b =>
                {
                    b.Property<int>("ChildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChildID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChildID");

                    b.ToTable("Lapsed");
                });

            modelBuilder.Entity("firmadb.Models.Lapsevanem", b =>
                {
                    b.Property<int>("ParentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentID"));

                    b.Property<int>("ChildID")
                        .HasColumnType("int");

                    b.Property<int>("ParentEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParentID");

                    b.HasIndex("ChildID");

                    b.HasIndex("ParentEmployee");

                    b.ToTable("Lapsevanem");
                });

            modelBuilder.Entity("firmadb.Models.Ligipääasuluba", b =>
                {
                    b.Property<int>("AccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccessID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Ligipääasuluba");
                });

            modelBuilder.Entity("firmadb.Models.Puhkepäevad", b =>
                {
                    b.Property<int>("VacationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VacationID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Puhkepäevad");
                });

            modelBuilder.Entity("firmadb.Models.Tervisekontroll", b =>
                {
                    b.Property<int>("HealthCheckID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthCheckID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Status")
                        .HasColumnType("datetime2");

                    b.HasKey("HealthCheckID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Tervisekontroll");
                });

            modelBuilder.Entity("firmadb.Models.Employee", b =>
                {
                    b.HasOne("firmadb.Models.Firma", "Firma")
                        .WithMany("Employees")
                        .HasForeignKey("FirmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("firmadb.Models.Ametinimetus", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("firmadb.Models.Haigusleht", b =>
                {
                    b.HasOne("firmadb.Models.Employee", "Employee")
                        .WithMany("Haiguslehed")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("firmadb.Models.Laenutus", b =>
                {
                    b.HasOne("firmadb.Models.Employee", "Employee")
                        .WithMany("Laenutused")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("firmadb.Models.LaenutatavadAsjad", "LaenutatavadAsjad")
                        .WithMany("Laenutused")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LaenutatavadAsjad");
                });

            modelBuilder.Entity("firmadb.Models.Lapsevanem", b =>
                {
                    b.HasOne("firmadb.Models.Lapsed", "Child")
                        .WithMany("Lapsevanemad")
                        .HasForeignKey("ChildID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("firmadb.Models.Employee", "Employee")
                        .WithMany("Lapsevanemad")
                        .HasForeignKey("ParentEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("firmadb.Models.Ligipääasuluba", b =>
                {
                    b.HasOne("firmadb.Models.Employee", "Employee")
                        .WithMany("Ligipääasuload")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("firmadb.Models.Puhkepäevad", b =>
                {
                    b.HasOne("firmadb.Models.Employee", "Employee")
                        .WithMany("Puhkepäevad")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("firmadb.Models.Tervisekontroll", b =>
                {
                    b.HasOne("firmadb.Models.Employee", "Employee")
                        .WithMany("Tervisekontrollid")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("firmadb.Models.Ametinimetus", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("firmadb.Models.Employee", b =>
                {
                    b.Navigation("Haiguslehed");

                    b.Navigation("Laenutused");

                    b.Navigation("Lapsevanemad");

                    b.Navigation("Ligipääasuload");

                    b.Navigation("Puhkepäevad");

                    b.Navigation("Tervisekontrollid");
                });

            modelBuilder.Entity("firmadb.Models.Firma", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("firmadb.Models.LaenutatavadAsjad", b =>
                {
                    b.Navigation("Laenutused");
                });

            modelBuilder.Entity("firmadb.Models.Lapsed", b =>
                {
                    b.Navigation("Lapsevanemad");
                });
#pragma warning restore 612, 618
        }
    }
}
